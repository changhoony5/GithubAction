name: Unity Android Build

on:
  push:
    tags:
      - '*'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: jlumbroso/free-disk-space@v1.3.1
      - uses: actions/checkout@v4
      - uses: actions/cache@v3
        with:
          path: Library
          key: Library-Android

      # Unity 설정 및 빌드
      - name: Setup and Build Unity
        uses: game-ci/unity-builder@v4
        with:
          version: ${{ secrets.UNITY_EDITOR_VERSION }}
          targetPlatform: Android
          customParameters: '-keystore $HOME/my-release-key.keystore -keystorePassword ${{ secrets.KEYSTORE_PASSWORD }} -keyalias ${{ secrets.KEYSTORE_ALIAS }} -keyPassword ${{ secrets.KEY_PASSWORD }}'
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
          androidExportType: ${{ ANDROID_EXPORT_TYPE }} # if want to change for .aab , then write here this 'androidAppBundle'
          androidKeystoreName: user.keystore
          androidKeystoreBase64: ${{ secrets.ANDROID_KEYSTORE }}
          androidKeystorePass: ${{ secrets.KEYSTORE_PASSWORD }}
          androidKeyaliasName: ${{ secrets.KEYSTORE_ALIAS }}
          androidKeyaliasPass: ${{ secrets.KEY_PASSWORD }}
          androidTargetSdkVersion: AndroidApiLevel33

      # tag : 1.0.0  => 1_0_0 으로 변환 해주기
      - name: Set TAG environment variable
        id: set_tag
        run: echo "TAG=$(git describe --tags --abbrev=0)" >> $GITHUB_ENV

      - name: Convert TAG dots to underscores
        id: convert_tag
        run: echo "TAG_WITH_UNDERSCORES=${{ env.TAG//./_ }}" >> $GITHUB_ENV

      # APK artifact 업로드
      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ secrets.APP_NAME }}-apk-android-${{ env.TAG_WITH_UNDERSCORES }}
          path: build/Android/*.apk

      # APK를 S3에 업로드
      - name: Upload APK to S3
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
        run: |
          apk_file=$(ls build/Android/*.apk)
          aws s3 cp $apk_file s3://dp-mobile-app/test --acl public-read
